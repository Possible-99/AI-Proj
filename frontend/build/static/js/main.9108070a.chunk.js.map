{"version":3,"sources":["components/layout/layout.component.jsx","components/dashboardAlgoButtons/dashboardAlgoButtons.component.jsx","components/howToSection/howToSection.component.jsx","pages/dashboard/dashboard.component.jsx","components/fileDragger/fileDragger.component.jsx","components/prioriInputs/prioriInputs.component.jsx","components/dataTable/dataTable.component.jsx","pages/priori/columns.js","pages/priori/priori.component.jsx","pages/metricas/columns.js","pages/metricas/metricas.component.jsx","pages/clusteringJerarquico/columns.js","components/clusteringFirstPart/columns.js","components/selectVariables/selectVariables.component.jsx","components/clusteringFirstPart/clusteringFirstPart.component.jsx","components/clusteringResults/columns.js","components/scatterGraph/scatterGraph.component.jsx","components/clusteringResults/clusteringResults.component.jsx","pages/clusteringJerarquico/clusteringJerarquico.component.jsx","pages/clusteringParticional/clusteringParticional.component.jsx","pages/regresionLogistica/regresionLogistica.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Footer","Layout","Sider","SubMenu","Menu","MyLayout","children","menuKey","title","useState","collapsed","isCollapsed","setCollapsed","history","useHistory","style","minHeight","collapsible","onCollapse","theme","defaultSelectedKeys","mode","Item","icon","HomeOutlined","to","color","TableOutlined","ColumnWidthOutlined","DotChartOutlined","LineChartOutlined","className","onBack","goBack","ghost","textAlign","href","id","GithubFilled","fontSize","margin","Title","Typography","DashboardAlgoButtons","display","gutter","xs","sm","md","lg","marginBottom","height","span","hoverable","TabPane","Tabs","Paragraph","HowToSection","tabNames","level","defaultActiveKey","tab","grid","xl","xxl","dataSource","imageSrc","preview","src","renderItem","item","width","Content","Dashboard","padding","Dragger","Upload","FileDragger","props","InboxOutlined","PrioriInputs","state","setState","disabled","fontWeight","min","max","onChange","e","support","confidence","lift","minElements","DataTable","data","columns","tableTitle","size","scroll","pagination","dataIndex","key","render","items","map","responsive","Priori","disabledStatus","setDisabledStatus","prioriData","setPrioriData","name","accept","maxCount","Object","values","indexOf","multiple","action","info","status","file","response","rules","length","message","error","success","onDrop","type","onClick","window","location","reload","columnsGeneratorEuclidian","numberColumns","array","push","text","record","index","columnsGeneratorMinkowski","columnsGeneratorChebyshev","columnsGeneratorManhattan","Metricas","metricasData","setMetricasData","setColumns","keys","euclidian","minkowski","chebyshev","manhattan","console","log","columnsSkeleton","euclidianColumns","minkowskiColumns","chebyshevColumns","manhattanColumns","float","x","fixData","fixedData","variables","variable","value","columnsGeneratorWithoutIndex","forEach","SelectVariables","setVariablesSelected","loading","setLoading","OPTIONS","allVariables","setItems","useEffect","selectedItems","filteredOptions","filter","o","includes","showArrow","Option","ClusteringFirstPart","setCorrVariables","corrVariables","variablesSelected","tablaGeneral","setTableGeneral","JSON","parse","originFileObj","columnsGenerator","Select","ScatterGraph","clusterName","clusters","xfield","yfield","graphVariables","setGraphVariables","config","appendPadding","xField","yField","colorField","shape","yAxis","nice","line","stroke","xAxis","defaultValue","ClusteringResults","clusteringAlgorithm","responseData","setResponseData","url","FormData","jsonVariables","stringify","append","axios","post","headers","then","dataWithoutJson","clustersQuantity","centroidesH","catch","columnsEskeleton","tablaGeneralColumns","centroidesHColumns","ClusteringJerarquico","ClusteringParticional","RegresionLogistica","App","exact","path","component","ClusteringParticiional","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9108070a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Layout, Menu } from \"antd\";\nimport { PageHeader } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  TableOutlined,\n  HomeOutlined,\n  ColumnWidthOutlined,\n  DotChartOutlined,\n  LineChartOutlined,\n  GithubFilled \n} from \"@ant-design/icons\";\n\nimport \"./layout.styles.scss\";\n\nconst {  Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nconst MyLayout = ({ children, menuKey, title }) => {\n  const [isCollapsed, setCollapsed] = useState({\n    collapsed: false,\n  });\n\n  const onCollapse = () => {\n    setCollapsed({ collapsed: !collapsed });\n  };\n  const { collapsed } = isCollapsed;\n  let history = useHistory();\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Sider collapsible collapsed={collapsed} onCollapse={onCollapse} >\n        <Menu theme=\"dark\" defaultSelectedKeys={[menuKey]} mode=\"inline\">\n          <Menu.Item key=\"1\" icon={<HomeOutlined />}>\n            <Link to=\"/\" style={{ color: \"white\" }}>\n              Home\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"2\" icon={<TableOutlined />}>\n            <Link to=\"/priori\" style={{ color: \"white\" }}>\n              A priori\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"3\" icon={<ColumnWidthOutlined />}>\n            <Link to=\"/metricas\" style={{ color: \"white\" }}>\n            Métricas S.\n            </Link>\n          </Menu.Item>\n          <SubMenu key=\"sub2\" icon={<DotChartOutlined />} title=\"Clustering\">\n            <Menu.Item key=\"4\">\n              <Link to=\"/clustering-jerarquico\">Jerárquico</Link>\n            </Menu.Item>\n            <Menu.Item key=\"5\">\n              <Link to=\"/clustering-particional\">Particional</Link>\n            </Menu.Item>\n          </SubMenu>\n          <Menu.Item key=\"6\" icon={<LineChartOutlined />}>\n            <Link to=\"/regresion-logistica\" style={{ color: \"white\" }}>\n            Regresión Logística\n            </Link>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout className=\"site-layout\">\n        <PageHeader\n          className=\"site-page-header\"\n          onBack={history.goBack}\n          title={title}\n          ghost={false}\n          // extra={[\n          //   <BulbFilled style={{ cursor: \"pointer\" }} />,\n          //   <BellFilled style={{ cursor: \"pointer\" }} />,\n          //   <Button key=\"1\" type=\"primary\">\n          //     Primary\n          //   </Button>,\n          // ]}\n        />\n        {children}\n        <Footer style={{ textAlign: \"center\" }}>\n          <a href=\"https://github.com/Possible-99\" id=\"gitHubLink\">\n            Created by Juan SR  <GithubFilled style={{fontSize:\"1.5em\",margin:\"0 0 0 4px\"}}/>\n          </a>\n        </Footer>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default MyLayout;\n","import React from 'react'\nimport { Row, Col,Typography } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"antd\";\nconst { Title } = Typography;\n\nconst DashboardAlgoButtons=()=>{\n\n    return(\n      <div style={{display:\"block\",margin:\"0 0 40px 0\"}}>\n        <Title>Selecciona un algoritmo</Title>\n        <Row\n            gutter={[\n              { xs: 8, sm: 16, md: 24, lg: 32 },\n              { xs: 16, sm: 16, md: 16, lg: 32 },\n            ]}\n            style={{ marginBottom: \"10px\", height: \"140px\" }}\n          >\n            <Col\n              lg={{ span: 6 }}\n              md={{ span: 12 }}\n              sm={{ span: 24 }}\n              xs={{ span: 24 }}\n            >\n              <Link to=\"/priori\">\n                <Card className=\"card-algorithm \" hoverable>\n                  <span>Algoritmo a priori</span>\n                </Card>\n              </Link>\n            </Col>\n            <Col\n              lg={{ span: 6 }}\n              md={{ span: 12 }}\n              sm={{ span: 24 }}\n              xs={{ span: 24 }}\n            >\n              <Link to=\"/metricas\">\n                <Card className=\"card-algorithm \" hoverable>\n                  <span>Métricas de similitud</span>\n                </Card>\n              </Link>\n            </Col>\n            <Col\n              lg={{ span: 6 }}\n              md={{ span: 12 }}\n              sm={{ span: 24 }}\n              xs={{ span: 24 }}\n            >\n              <Link to=\"/clustering-jerarquico\">\n                <Card className=\"card-algorithm \" hoverable>\n                  <span>Clustering Jerárquico</span>\n                </Card>\n              </Link>\n            </Col>\n            <Col\n              lg={{ span: 6 }}\n              md={{ span: 12 }}\n              sm={{ span: 24 }}\n              xs={{ span: 24 }}\n            >\n              <Link to=\"/clustering-particional\">\n                <Card className=\"card-algorithm \" hoverable>\n                  <span>Clustering Particional</span>\n                </Card>\n              </Link>\n            </Col>\n          </Row>\n          </div>\n    )\n}\n\nexport default DashboardAlgoButtons;","import React from 'react'\nimport { Tabs,List,Card,Image,Typography } from 'antd';\nimport \"./howToSection.styles.scss\"\n\n\nconst { TabPane } = Tabs;\nconst {Title,Paragraph}=Typography\n\nconst HowToSection=({title,tabNames})=>{\n    const dataPriori = [\n        {\n          title: 'Formato correcto',\n          imageSrc:\"/good_ones/correct.png\",\n          preview:{\n            src: '/good_ones/1.png',\n          }\n        },\n        {\n          title: 'Formato incorrecto',\n          imageSrc:'/bad_ones/incorrect.png',\n          preview:{\n            src:\"/bad_ones/1.png\" ,\n          }\n        },\n      ];\n      const dataMetricas = [\n        {\n          title: 'Formato correcto',\n          imageSrc:'/good_ones/correct.png',\n          preview:{\n            src: \"/good_ones/2.png\",\n          }\n        },\n        {\n          title: 'Formato incorrecto ',\n          imageSrc:'/bad_ones/incorrect.png',\n          preview:{\n            src:\"/bad_ones/2.png\" ,\n          }\n        },\n      ];\n      const dataClustering = [\n        {\n          title: 'Formato correcto',\n          imageSrc:'/good_ones/correct.png',\n          preview:{\n            src: \"/good_ones/3.png\",\n          }\n        },\n        {\n          title: 'Formato incorrecto ',\n          imageSrc:'/bad_ones/incorrect.png',\n          preview:{\n            src: \"/bad_ones/3.png\",\n          }\n        },\n      ];\n    return(\n        <div id=\"howToDiv\">\n        <Title level={3}>{title}</Title>\n            <Tabs defaultActiveKey=\"1\" >\n                <TabPane tab={tabNames[0]} key=\"1\">\n                <Paragraph>\n                Para usar este algoritmo sube un archivo y parámetros(lift, confianza,etc) tomando en cuenta que tiene que cumplir con las siguientes características para obtener los mejores resultados posibles. \n                    <ul>\n                        <li>Subirlo de preferencia en formato CSV(solo se pueden subir archivos CSV o TXT)</li>\n                        <li>Solo subirlo con los campos necesarios para el algoritmo</li>\n                        <li>Respetar el formato establecido en la siguiente sección</li>\n                        <li>Usa parámetros de acuerdo a la data que estas subiendo en el archivo</li>\n                    </ul>\n                    <Title level={3}>Formato</Title>\n                </Paragraph>\n                <List\n                    grid={{\n                    gutter: 16,\n                    xs: 1,\n                    sm: 4,\n                    md: 2,\n                    lg: 4,\n                    xl: 4,\n                    xxl: 8,\n                    }}\n                    dataSource={dataPriori}\n                    renderItem={item => (\n                    <List.Item>\n                        <Card title={item.title} style={{ width: 240 }}><Image width={200} height={200} src={item.imageSrc} preview={item.preview}/></Card>\n                    </List.Item>\n                    )}\n                />\n                </TabPane>\n                <TabPane tab={tabNames[1]} key=\"2\">\n                <Paragraph>\n                Para usar este algoritmo sube un archivo tomando en cuenta que tiene que cumplir con las siguientes características para obtener los mejores resultados posibles.\n                    <ul>\n                        <li>Subirlo de preferencia en formato CSV(solo se pueden subir archivos CSV o TXT)</li>\n                        <li>Solo subirlo con los campos necesarios para el algoritmo</li>\n                        <li>Quitar los campos que contengan el ID(Ej:Paciente_ID, etc)</li>\n                        <li>Respetar el formato establecido en la siguiente sección</li>\n                    </ul>\n                    <Title level={3}>Formato</Title>\n                </Paragraph>\n                <List\n                    grid={{\n                    gutter: 16,\n                    xs: 1,\n                    sm: 4,\n                    md: 2,\n                    lg: 4,\n                    xl: 4,\n                    xxl: 8,\n                    }} \n                    dataSource={dataMetricas}\n                    renderItem={item => (\n                    <List.Item>\n                        <Card title={item.title}  style={{ width: 240 }}><Image width={200} height={200} src={(item.imageSrc)} preview={item.preview}/></Card>\n                    </List.Item>\n                    )}\n                />\n                </TabPane>\n                <TabPane tab={tabNames[2]} key=\"3\">\n                <Paragraph>\n                    Para usar este algoritmo sube un archivo tomando en cuenta que tiene que cumplir con las siguientes características\n                    para obtener los mejores resultados posibles.\n                    <ul>\n                        <li>Subirlo de preferencia en formato CSV(solo se pueden subir archivos CSV o TXT)</li>\n                        <li>Solo subirlo con los campos necesarios para el algoritmo</li>\n                        <li>Quitar los campos que contengan el ID(Ej:Paciente_ID, etc)</li>\n                        <li>Respetar el formato establecido en la siguiente sección</li> \n                    </ul>\n                    <Title level={3}>Formato</Title>\n                </Paragraph>\n                <List\n                    grid={{\n                    gutter: 16,\n                    xs: 1,\n                    sm: 4,\n                    md: 2,\n                    lg: 4,\n                    xl: 4,\n                    xxl: 8,\n                    }}\n                    dataSource={dataClustering}\n                    renderItem={item => (\n                    <List.Item>\n                        <Card title={item.title}  style={{ width: 240 }}><Image width={200} height={200} src={(item.imageSrc)} preview={item.preview}/></Card>\n                    </List.Item>\n                    )}\n                />\n                </TabPane>\n            </Tabs>\n        </div>\n    )\n}\n\nexport default HowToSection;","import React from \"react\";\nimport \"./dashboard.styles.scss\";\nimport MyLayout from \"../../components/layout/layout.component\";\nimport { Divider, Layout} from \"antd\";\nimport DashboardAlgoButtons from \"../../components/dashboardAlgoButtons/dashboardAlgoButtons.component\";\nimport HowToSection from \"../../components/howToSection/howToSection.component\";\n\nconst { Content } = Layout;\n\nconst Dashboard = () => {\n  return (\n    <MyLayout menuKey=\"1\" title=\"Home\">\n      <Content style={{ margin: \"5px 16px 0px 16px\" }}>\n        <div\n          className=\"site-layout-background\"\n          style={{\n            padding: 24,\n            minHeight: \"100%\",\n          }}\n        >\n          <DashboardAlgoButtons/>\n          <Divider/>\n          <HowToSection title=\"Como usar cada algoritmo\" tabNames={[\"A priori\",\"Métricas de similitud\",\"Clustering\"]}/>\n\n        </div>\n      </Content>\n    </MyLayout>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react'\nimport { InboxOutlined } from '@ant-design/icons';\nimport {Upload} from \"antd\";\nimport \"./fileDragger.styles.scss\";\nconst { Dragger } = Upload;\n\nconst FileDragger=(props)=>{\n\n    return(\n        <Dragger {...props}>\n            <p className=\"ant-upload-drag-icon\">\n            <InboxOutlined />\n        </p>\n        <p className=\"ant-upload-text\">Haz click o arrastra el archivo hasta aquí para subirlo</p>\n        <p className=\"ant-upload-hint\">\n            Se debe subir un archivo en formato .csv\n        </p>\n        </Dragger>\n    )\n}\n\nexport default FileDragger","import React from 'react'\nimport {Row,Col,InputNumber,Typography} from \"antd\";\n\n\nconst {Title}=Typography\nconst PrioriInputs=({state,setState,disabled})=>{\n\n    return(\n        <div>\n        <Title level={3}>Introduce los datos para generar las reglas</Title>\n        <h4 style={{fontWeight:\"300\"}}>Introduce parámetros validos para obtener los mejores resultados, para subir el archivo introduce los parámetros.\n        </h4>\n          <Row>\n            <Col xs={24} sm={8} md={8} lg={6} xl={6}>\n            <h3>Soporte</h3>\n            <InputNumber min={0.0001} max={100} onChange={e=>setState({...state,support:e})} disabled={disabled}  /></Col>\n            <Col xs={24} sm={8} md={8} lg={6} xl={6}>\n            <h3>Confianza</h3>\n            <InputNumber min={0.00001} max={100} onChange={e=>setState({...state,confidence:e})} disabled={disabled}/></Col>\n            <Col xs={24} sm={8} md={8} lg={6} xl={6}>\n            <h3>Lift</h3>\n            <InputNumber min={0.00001} max={100} onChange={e=>setState({...state,lift:e})}  disabled={disabled}/></Col>\n            <Col xs={24} sm={8} md={8} lg={6} xl={6}>\n            <h3>Núm. de elementos min.</h3>\n            <InputNumber min={1} max={100} onChange={e=>setState({...state,minElements:e})} disabled={disabled}/></Col>\n          </Row>\n        </div>\n    )\n}\n\nexport default PrioriInputs;","import React from 'react'\nimport {Table} from 'antd';\nimport \"./dataTable.styles.scss\"\n\nconst DataTable=({data,columns,tableTitle,size,scroll,pagination,display})=>{\n    return(\n        <div style={{display:\"block\"}}>\n        <h3 style={{display:display,margin:\"15px 0 0 0\"}}>{tableTitle}</h3>\n        <Table columns={columns} dataSource={data} scroll={scroll} size={size} pagination={pagination} style={{display:display}}/>\n        </div>\n    )\n}\n\n\nexport default DataTable;","export const columns = [\n    {\n      title: 'Rule',\n      dataIndex: 'number',\n      key: 'number',\n    },\n    {\n      title: 'Items',\n      dataIndex: 'items',\n      key: 'items',\n      render: items => { return items.map(item=>(`${item} | `))},\n      responsive: ['md'],\n    },\n    {\n      title: 'Support',\n      dataIndex: 'support',\n      key: 'support',\n      responsive: ['lg'],\n    },\n    {\n        title: 'Confidence',\n        dataIndex: 'confidence',\n        key: 'confidence',\n        responsive: ['lg'],\n      },\n      {\n        title: 'Lift',\n        dataIndex: 'lift',\n        key: 'lift',\n        responsive: ['lg'],\n      },\n  ];","import React,{useState} from \"react\";\nimport \"./priori.styles.scss\";\nimport MyLayout from \"../../components/layout/layout.component\";\nimport { Layout,Divider,message,Button} from \"antd\";\nimport FileDragger from \"../../components/fileDragger/fileDragger.component\";\nimport PrioriInputs from '../../components/prioriInputs/prioriInputs.component';\nimport PrioriTable from \"../../components/dataTable/dataTable.component\"\nimport {columns} from \"../../pages/priori/columns\"\nconst { Content } = Layout;\n\nconst Priori = () => {\n  const [state, setState] = useState({support:null,confidence:null,lift:null,minElements:null})\n  const [disabledStatus, setDisabledStatus] = useState(false)\n  const [prioriData, setPrioriData] = useState(null)\n\n  const props = {\n    name: 'file',\n    accept:\".csv\",\n    data:state,\n    maxCount:\"1\",\n    disabled:Object.values(state).indexOf(null) > -1 || disabledStatus ,\n    multiple: false,\n    action: '/api/priori',\n    onChange(info) {\n      const { status } = info.file;\n      if (status !== 'uploading') {\n        setDisabledStatus(true)\n      }\n      // if (status==\"uploading\"){\n      //   setTimeout(()=>{\n      //     if(status==\"donde\"){\n      //       return\n      //     }\n      //     message.error(\"Hubo un error. Intenta con otros parametros\")\n      //     window.location.reload()\n      //   },60000)\n      // }\n      if (status === 'done') {\n        if (info.file.response.rules.length === 0){\n          message.error(\"Ingresa un archivo o parametros validos\") \n          setPrioriData(info.file.response)\n        }\n        else{\n          message.success(`Se completo exitosamente`);\n          setPrioriData(info.file.response)\n        }\n      } else if (status === 'error') {\n        message.error(`${info.file.name} file upload failed.`);\n      }\n    },\n    onDrop(e) {\n    },\n  };\n\n  const refreshPage = ()=>{\n    window.location.reload();\n }\n\n  return (\n    <MyLayout menuKey=\"2\" title=\"A priori\">\n      <Content style={{ margin: \"5px 16px 0px 16px\" }}>\n        <div\n          className=\"site-layout-background\"\n          style={{ padding: 24, minHeight: 360 }}\n        >\n          <PrioriInputs state={state} setState={setState} disabled={disabledStatus}/>\n          <Divider/>\n          <FileDragger {...props} />\n          <Divider></Divider>\n          {prioriData==null? null:(<div>\n          <PrioriTable data={prioriData.rules} columns={columns} tableTitle=\"Tabla Apriori\"/>\n          <Button type=\"primary\" onClick={refreshPage}>Nuevo estudio</Button></div>)\n          }\n\n        </div>\n      </Content>\n    </MyLayout>\n  );\n};\n\nexport default Priori;\n","\nexport const columnsGeneratorEuclidian=(numberColumns,array)=>{\n  const columns= [];\n  columns.push({\n    title:\"\",\n    key:\"index\",\n    render: (text, record) =>{return array.indexOf(record)} ,\n  })\n\n  for (let index = 0; index < numberColumns; index++) {\n    columns.push({\n      title: `${index}`,\n      dataIndex:`${index}` ,\n      key: `${index}`,\n    })\n  }\n  return columns;\n}\n\nexport const columnsGeneratorMinkowski=(numberColumns,array)=>{\n  const columns= [];\n  columns.push({\n    title:\"\",\n    key:\"index\",\n    render: (text, record) =>{return array.indexOf(record)} ,\n  })\n\n  for (let index = 0; index < numberColumns; index++) {\n    columns.push({\n      title: `${index}`,\n      dataIndex:`${index}` ,\n      key: `${index}`,\n    })\n  }\n  return columns;\n}\nexport const columnsGeneratorChebyshev=(numberColumns,array)=>{\n  const columns= [];\n  columns.push({\n    title:\"\",\n    key:\"index\",\n    render: (text, record) =>{return array.indexOf(record)} ,\n  })\n\n  for (let index = 0; index < numberColumns; index++) {\n    columns.push({\n      title: `${index}`,\n      dataIndex:`${index}` ,\n      key: `${index}`,\n    })\n  }\n  return columns;\n}\n\nexport const columnsGeneratorManhattan=(numberColumns,array)=>{\n  const columns= [];\n  columns.push({\n    title:\"\",\n    key:\"index\",\n    render: (text, record) =>{return array.indexOf(record)} ,\n  })\n\n  for (let index = 0; index < numberColumns; index++) {\n    columns.push({\n      title: `${index}`,\n      dataIndex:`${index}` ,\n      key: `${index}`,\n    })\n  }\n  return columns;\n}\n\n","import React,{useState} from \"react\";\nimport \"./metricas.styles.scss\";\nimport MyLayout from \"../../components/layout/layout.component\";\nimport { Divider, Layout,message,Button, Typography} from \"antd\";\nimport FileDragger from \"../../components/fileDragger/fileDragger.component\";\nimport DataTable from \"../../components/dataTable/dataTable.component\";\nimport { columnsGeneratorChebyshev, columnsGeneratorEuclidian, columnsGeneratorManhattan, columnsGeneratorMinkowski } from \"../../pages/metricas/columns\"\nconst { Content } = Layout;\nconst {Title}=Typography\n\nconst Metricas = () => {\n\n  const [disabledStatus, setDisabledStatus] = useState(false)\n  const [metricasData, setMetricasData] = useState(null)\n  const [columns, setColumns] = useState(null)\n  const props = {\n    name: 'file',\n    accept:\".csv,.txt\",\n    maxCount:\"1\",\n    disabled: disabledStatus ,\n    multiple: false,\n    action: '/api/metricas',\n    onChange(info) {\n      const { status } = info.file;\n      if (status !== 'uploading') {\n        setDisabledStatus(true)\n      }\n      if (status === 'done') {\n        if (Object.keys(info.file.response).length === 0){\n          message.error(\"Ingresa un archivo o parametros validos\") \n          setMetricasData(info.file.response)\n        }\n        else{\n          message.success(`Se completo exitosamente`);\n          setMetricasData(info.file.response)\n          const numberColumns=info.file.response.numberColumns\n          const {euclidian,minkowski,chebyshev,manhattan}= info.file.response\n          console.log(\"====-\")\n          console.log(euclidian)\n          const columnsSkeleton={euclidianColumns:columnsGeneratorEuclidian(numberColumns,euclidian),minkowskiColumns:columnsGeneratorMinkowski(numberColumns,minkowski),chebyshevColumns:columnsGeneratorChebyshev(numberColumns,chebyshev),manhattanColumns:columnsGeneratorManhattan(numberColumns,manhattan)}\n          setColumns(columnsSkeleton)\n        }\n      } else if (status === 'error') {\n        message.error(\"Error. Suba un archivo valido\");\n      }\n    },\n    onDrop(e) {\n    },\n  }; \n\n  console.log(\"====\")\n  console.log(columns)\n  console.log(metricasData)\n\n  return (\n    <MyLayout menuKey=\"3\" title=\"Métricas\">\n      <Content style={{ margin: \"5px 16px 0px 16px\" }}>\n        <div\n          className=\"site-layout-background\"\n          style={{ padding: 24, minHeight: 360 }}\n        >\n        <Title level={3}>Sube el archivo para obtener las metricas de similitud</Title>\n        <h4 style={{fontWeight:\"300\"}}>Arrastra un archivo solo con los datos necesarios(sin columnas que contengan ID,etc)</h4>\n          <FileDragger {...props}/>\n          <Button type=\"primary\" style={{float:\"right\",margin:\"10px 0\",display:disabledStatus?\"\":\"none\"}} size=\"middle\" onClick={()=>window.location.reload()} >Nuevo estudio</Button>\n          \n          {\n            metricasData==null?null:(\n                (Object.keys(metricasData).length !== 0 && columns!=null )&& (\n              <div>\n                <Divider></Divider>\n                <DataTable data={metricasData.euclidian} columns={columns.euclidianColumns} tableTitle={\"Tabla Euclidiana\"}  scroll={{ x: 1500}}pagination={true} />\n                <Divider/>\n                <DataTable data={metricasData.minkowski} columns={columns.minkowskiColumns} tableTitle={\"Tabla Minkowski \"}  scroll={{ x: 1500}}pagination={true} />\n                <Divider/>\n                <DataTable data={metricasData.chebyshev} columns={columns.chebyshevColumns} tableTitle={\"Tabla Chebyshev(P=1.5)\"}  scroll={{ x: 1500}}pagination={true} />\n                <Divider/>\n                <DataTable data={metricasData.manhattan} columns={columns.manhattanColumns} tableTitle={\"Tabla Manhattan\"}  scroll={{ x: 1500}}pagination={true} />\n              </div>\n              )\n            )\n            }\n        </div>\n      </Content>\n    </MyLayout>\n  );\n};\n\nexport default Metricas;\n","export const columns=[\n    {\n        title:\"Variable\",\n        dataIndex:\"variable\",\n    },\n    {\n        title:\"Value\",\n        dataIndex:\"value\",\n    }\n]\n\n\nexport const fixData=(data)=>{\n    const fixedData=[]\n    const variables=Object.keys(data)\n    const values=Object.values(data)\n\n    for (let index = 0; index < variables.length; index++) {\n        fixedData.push({\n            variable:variables[index],\n            value:values[index]\n        })\n    }\n    return {fixedData:fixedData,variables:variables}\n}\n","const columnsGeneratorWithoutIndex=(data)=>{\n    let columns=[]\n    const keys=Object.keys(data[0])\n    keys.forEach(item=>{\n        columns.push({\n            title:item,\n            dataIndex:item,\n        })\n    })\n    return columns\n}\n\nexport default columnsGeneratorWithoutIndex","import React,{useState,useEffect} from 'react'\n\nimport { Divider, Select,Button } from 'antd';\n\n\n\nconst SelectVariables=({text,state,setVariablesSelected,data,loading,setLoading})=>{\n    const OPTIONS = data;\n    const [items, setItems] = useState({\"selectedItems\": [],allVariables:false})\n    \n    const handleChange = selectedItems => {\n        setItems({ selectedItems });\n      };\n\n    useEffect(() => {\n        if (items.selectedItems.length===6){\n            setVariablesSelected(items.selectedItems)\n            setLoading(true)\n        }\n    }, [items])\n    \n    const handleClick=()=>{\n        setItems({...items,allVariables:true})\n        setVariablesSelected(\"all\")\n        setLoading(true)\n    }\n\n    const { selectedItems } = items;\n    const filteredOptions = OPTIONS.filter(o => !selectedItems.includes(o));\n    const disabled=selectedItems.length===6?true:false || items.allVariables===true?true:false\n\n    return(\n       \n        <div>\n         <Divider/>\n            <h3>Selecciona solo 6 variables</h3>\n            <Select\n            showArrow\n            mode=\"multiple\"\n            value={selectedItems}\n            onChange={handleChange}\n            style={{ width: '100%' }}\n            loading={loading}\n            disabled={disabled}\n            >\n                {filteredOptions.map(item => (\n                <Select.Option key={item} value={item} disabled={disabled}>\n                    {item}\n                </Select.Option>\n            ))}\n            </Select>\n            <Divider/>\n            <h3>Ó selecciona todas las variables en la tabla</h3>\n            <Button type=\"primary\" loading={loading} onClick={handleClick} disabled={disabled} >Todas</Button>\n        </div>\n    )\n}\n\n\nexport default SelectVariables;","import React,{useState} from 'react'\nimport { Divider,message,Button } from \"antd\";\nimport FileDragger from \"../../components/fileDragger/fileDragger.component\";\nimport DataTable from \"../../components/dataTable/dataTable.component\";\nimport {fixData,columns} from \"../../pages/clusteringJerarquico/columns\";\nimport columnsGeneratorWithoutIndex from './columns';\nimport SelectVariables from \"../../components/selectVariables/selectVariables.component\";\n\n\n\nconst ClusteringFirstPart=({setCorrVariables,corrVariables,variablesSelected,setVariablesSelected,setLoading,loading})=>{\n    const [disabledStatus, setDisabledStatus] = useState(false)\n    const [tablaGeneral,setTableGeneral]=useState(null)\n    const props = {\n        name: 'file',\n        accept:\".csv,.txt\",\n        maxCount:\"1\",\n        disabled: disabledStatus ,\n        multiple: false,\n        action: '/api/pearsonVariables',\n        onChange(info) {\n          const { status } = info.file;\n          if (status !== 'uploading') {\n            setDisabledStatus(true)\n          }\n          if (status === 'done') {\n            if (Object.keys(info.file.response).length === 0){\n              message.error(\"Ingresa un archivo o parametros validos\") \n            }\n            else{\n              message.success(`Se completo exitosamente`)\n              const {variables,tablaGeneral}=info.file.response\n              setTableGeneral(JSON.parse(tablaGeneral))\n              setCorrVariables({file:info.file.originFileObj,variables:variables})\n    \n            }\n          } else if (status === 'error') {\n            message.error(\"Error. Introduzca un archivo o parametrtos validos\");\n          }\n        }\n      }; \n\n    return(\n        <div>\n        <FileDragger {...props}/>\n          <Button type=\"primary\" style={{float:\"right\",margin:\"10px 0\",display:disabledStatus?\"\":\"none\"}} onClick={()=>window.location.reload()}>Otro estudio</Button>\n          {\n            (corrVariables!==null && tablaGeneral!==null) && (\n            <div>\n              <DataTable columns={columnsGeneratorWithoutIndex(tablaGeneral)} data={tablaGeneral} tableTitle=\"Data\" pagination={true} scroll={{x:1500}} display={\"\"}/>\n              <Divider/> \n              <DataTable columns={columns} data={fixData(corrVariables.variables[0]).fixedData} tableTitle=\"Correlacion de Variables\" pagination={false} scroll={{ x: 1500}} />\n              <SelectVariables state={variablesSelected} setVariablesSelected={setVariablesSelected} text=\"Selecciona cinco variables o usa todas las variables de tu tabla\" data={fixData(corrVariables.variables[0]).variables} setLoading={setLoading} loading={loading}/>\n            </div>)\n          }\n          </div>\n    )\n}\n\n\nexport default ClusteringFirstPart;","\nexport const columnsGenerator=(data)=>{\n    let columns=[]\n    columns.push({\n    title:\"\",\n    key:\"index\",\n    render:(text,record,index)=>index ,\n  })\n    const keys=Object.keys(data[0])\n    keys.forEach(item=>{\n        columns.push({\n            title:item,\n            dataIndex:item,\n        })\n    })\n    return columns\n}\n\nexport const columnsGeneratorWithoutIndex=(data)=>{\n    let columns=[]\n    const keys=Object.keys(data[0])\n    keys.forEach(item=>{\n        columns.push({\n            title:item,\n            dataIndex:item,\n        })\n    })\n    return columns\n}\n\n","import React,{useState} from 'react'\nimport { Scatter } from '@ant-design/charts';\nimport { Divider,Select } from 'antd';\n\nconst { Option } = Select;\n\nconst ScatterGraph=({data,clusterName,clusters})=>{\n    const [graphVariables, setGraphVariables] = useState({\n        xfield:Object.keys(clusters[0])[0],\n        yfield:Object.keys(clusters[0])[1]\n    })\n\n    const handleChangeX=(value)=>{\n        setGraphVariables({...graphVariables,xfield:value})\n    }\n    const handleChangeY=(value)=>{\n        setGraphVariables({...graphVariables,yfield:value})\n    }\n\n    var config = {\n        appendPadding: 30,\n        data: data,\n        xField: graphVariables.xfield,\n        yField: graphVariables.yfield,\n        colorField: clusterName,\n        color: [\"#332288\", \"#88CCEE\", \"#44AA99\", \"#117733\", \"#999933\"],\n        // sizeField: clusterName,\n        size: 5,\n        shape: 'circle',\n        yAxis: {\n          nice: true,\n          line: { style: { stroke: '#eee' } },\n          title:{\n              text:graphVariables.yfield\n          }\n        },\n        xAxis: {\n          grid: { line: { style: { stroke: '#eee' } } },\n          line: { style: { stroke: '#eee' } },\n          title:{\n            text:graphVariables.xfield\n        }\n        },\n      };\n\n    return(\n        <div>\n            <Divider/>\n           \n            <h2>Gráfico de dispersión</h2>\n            <Scatter {...config} />\n            <Select defaultValue={graphVariables.xfield} style={{ width: 120 }} onChange={handleChangeX} >\n                {\n                    Object.keys(data[0]).map(key=>(\n                        key===graphVariables.xfield || key===graphVariables.yfield || key===\"clusterH\"|| key===\"clusterP\"?null:(<Option value={key}>{key}</Option>)\n                    ))\n                }\n                \n            </Select>\n            <Select defaultValue={graphVariables.yfield} style={{ width: 120 }} onChange={handleChangeY}>\n                {\n                    Object.keys(data[0]).map(key=>(\n                        key===graphVariables.xfield || key===graphVariables.yfield || key===\"clusterH\"|| key===\"clusterP\"?null:(<Option value={key}>{key}</Option>)\n                    ))\n                } \n            </Select>\n        </div>\n    )\n}\n\nexport default ScatterGraph;","import React,{useState,useEffect} from 'react'\n// import {} from 'antd';\nimport axios from \"axios\";\nimport DataTable from '../dataTable/dataTable.component';\nimport {columnsGenerator,columnsGeneratorWithoutIndex} from './columns';\nimport { Divider, message } from 'antd';\nimport ScatterGraph from '../scatterGraph/scatterGraph.component';\n\nconst ClusteringResults=({variablesSelected,corrVariables,clusteringAlgorithm, clusterName,setLoading})=>{\n    const [responseData, setResponseData] = useState(null)\n    const [columns,setColumns]=useState(null)\n    \n    \n    // Enviamos los campos seleccionados por el usuario\n   const url=\"/api/clustering\"+clusteringAlgorithm\n   const file=new FormData()\n   const jsonVariables=JSON.stringify(variablesSelected)\n   file.append(\"file\",corrVariables.file)\n   file.append(\"variablesSelected\",jsonVariables)\n    \n   useEffect(() => {\n        axios.post(url,file,{headers: {'Content-Type': 'multipart/form-data'}}).then(response=>{\n            const dataWithoutJson={clustersQuantity:response.data.clustersQuantity,centroidesH:JSON.parse(response.data.centroidesH),tablaGeneral:JSON.parse(response.data.tablaGeneral)}\n            setResponseData(dataWithoutJson)\n            setLoading(false)\n        })\n        .catch(error=>{\n            message.error(\"Hubo un error, intentalo de nuevo\")\n            setLoading(false)\n        })\n\n    }, [])\n\n    useEffect(()=>{\n        if(responseData!=null){\n            const {tablaGeneral,centroidesH,clustersQuantity}=responseData\n            const columnsEskeleton={tablaGeneralColumns:columnsGeneratorWithoutIndex(tablaGeneral),centroidesHColumns:columnsGenerator(centroidesH),clustersQuantity:columnsGeneratorWithoutIndex([clustersQuantity])}\n            setColumns(columnsEskeleton)\n        }\n    },[responseData])\n    \n\n\n    return(\n        <div>\n        {columns!=null && (\n            <div>\n                <Divider/>\n                <DataTable data={responseData.tablaGeneral} columns={columns.tablaGeneralColumns} scroll={{ x: 1500}} pagination={true} size=\"large\" tableTitle=\"Tabla de todos los elementos con su cluster\"/>\n                <Divider/>\n                <DataTable data={[responseData.clustersQuantity]} columns={columns.clustersQuantity} scroll={{ x: 1500}} pagination={false} size=\"large\" tableTitle=\"Num. Elementos en cada cluster\"/>\n                <Divider/>\n                <DataTable data={responseData.centroidesH} columns={columns.centroidesHColumns} scroll={{ x: 1500 }} pagination={false} size=\"large\" tableTitle=\"Clusters\"/>\n                <ScatterGraph data={responseData.tablaGeneral} clusterName={clusterName} clusters={responseData.centroidesH}/>\n            </div> )}\n        </div>\n    )\n}\n\n\nexport default ClusteringResults;","import React,{useState} from \"react\";\nimport \"./clusteringJerarquico.styles.scss\";\nimport MyLayout from \"../../components/layout/layout.component\";\nimport { Layout,Typography} from \"antd\";\nimport ClusteringFirstPart from \"../../components/clusteringFirstPart/clusteringFirstPart.component\";\nimport ClusteringResults from \"../../components/clusteringResults/clusteringResults.component\";\n\nconst { Content } = Layout;\nconst {Title}=Typography\n\nconst ClusteringJerarquico = () => {\n  const [corrVariables,setCorrVariables]=useState(null)\n  const [variablesSelected, setVariablesSelected] = useState(null)\n  const [loading, setLoading] = useState(false)\n\n  \n  \n  return (\n    <MyLayout menuKey=\"4\" title=\"Clustering Jerárquico\">\n      <Content style={{ margin: \"5px 16px 0px 16px\" }}>\n        <div\n          className=\"site-layout-background\"\n          style={{ padding: 24, minHeight: 360 }}\n        >\n          <Title level={3}>Sube un archivo para generar los clusters</Title>\n          <h4 style={{fontWeight:\"300\"}}>Suber un archivo solo con los datos necesarios(sin columnas que contengan ID,etc)</h4>\n          <ClusteringFirstPart setCorrVariables={setCorrVariables} corrVariables={corrVariables} variablesSelected={variablesSelected} setVariablesSelected={setVariablesSelected} loading={loading} setLoading={setLoading}/>\n          {variablesSelected!=null &&(\n            <div>\n            <ClusteringResults variablesSelected={variablesSelected} corrVariables={corrVariables} clusteringAlgorithm=\"Jerarquico\" clusterName=\"clusterH\" setLoading={setLoading}/>\n            </div>\n          ) }\n        </div>\n      </Content>\n    </MyLayout>\n  );\n};\n\nexport default ClusteringJerarquico;\n","import React,{useState} from \"react\";\nimport \"./clusteringParticional.styles.scss\";\nimport MyLayout from \"../../components/layout/layout.component\";\nimport { Layout,Typography } from \"antd\";\nimport ClusteringFirstPart from \"../../components/clusteringFirstPart/clusteringFirstPart.component\";\nimport ClusteringResults from \"../../components/clusteringResults/clusteringResults.component\";\nconst { Content } = Layout;\nconst {Title}=Typography\n\nconst ClusteringParticional = () => {\n  const [corrVariables,setCorrVariables]=useState(null)\n  const [variablesSelected, setVariablesSelected] = useState(null)\n  const [loading, setLoading] = useState(false)\n\n  \n  return (\n    <MyLayout menuKey=\"5\" title=\"Clustering Particional\">\n      <Content style={{ margin: \"5px 16px 0px 16px\" }}>\n        <div\n          className=\"site-layout-background\"\n          style={{ padding: 24, minHeight: 360 }}\n        >\n        <Title level={3}>Sube un archivo para generar los clusters</Title>\n        <h4 style={{fontWeight:\"300\"}}>Suber un archivo solo con los datos necesarios(sin columnas que contengan ID,etc)</h4>\n        <ClusteringFirstPart setCorrVariables={setCorrVariables} corrVariables={corrVariables} variablesSelected={variablesSelected} setVariablesSelected={setVariablesSelected} loading={loading} setLoading={setLoading}/>\n          {variablesSelected!=null &&(\n            <div>\n            <ClusteringResults variablesSelected={variablesSelected} corrVariables={corrVariables} clusteringAlgorithm=\"Particional\" clusterName=\"clusterP\" loading={loading} setLoading={setLoading}/>\n            </div>\n          ) }\n        </div>\n      </Content>\n    </MyLayout>\n  );\n};\n\nexport default ClusteringParticional;\n","import React,{useState} from \"react\";\nimport \"./regresionLogistica.styles.scss\";\nimport MyLayout from \"../../components/layout/layout.component\";\nimport { Layout,Divider,message,Button} from \"antd\";\nimport FileDragger from \"../../components/fileDragger/fileDragger.component\"\nimport ClusteringFirstPart from \"../../components/clusteringFirstPart/clusteringFirstPart.component\";\nconst { Content } = Layout;\n\nconst RegresionLogistica=()=>{\nconst [corrVariables,setCorrVariables]=useState(null)\n  const [variablesSelected, setVariablesSelected] = useState(null)\n  const [loading, setLoading] = useState(false)\n    \n    return(\n        <MyLayout menuKey=\"6\" title=\"Regresión Logística\">\n            <Content style={{ margin: \"5px 16px 0px 16px\" }}>\n                <div\n                className=\"site-layout-background\"\n                style={{ padding: 24, minHeight: 360 }}\n                >\n                <ClusteringFirstPart setCorrVariables={setCorrVariables} corrVariables={corrVariables} variablesSelected={variablesSelected} setVariablesSelected={setVariablesSelected} loading={loading} setLoading={setLoading}/>\n                </div>\n            </Content>\n        </MyLayout>\n    )\n}\n\n\nexport default RegresionLogistica","import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Dashboard from \"./pages/dashboard/dashboard.component\"\nimport Priori from \"./pages/priori/priori.component.jsx\";\nimport Metricas from './pages/metricas/metricas.component.jsx';\nimport ClusteringJerarquico from './pages/clusteringJerarquico/clusteringJerarquico.component.jsx';\nimport ClusteringParticiional from './pages/clusteringParticional/clusteringParticional.component.jsx';\nimport RegresionLogistica from \"./pages/regresionLogistica/regresionLogistica.component\";\nimport './App.less';\n\n// import NotFound from \"./components/notFound/notFound.component\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard}/>\n        <Route exact path=\"/priori\" component={Priori}/>\n        <Route exact path=\"/metricas\" component={Metricas}/>\n        <Route exact path=\"/clustering-jerarquico\" component={ClusteringJerarquico}/>\n        <Route exact path=\"/clustering-particional\" component={ClusteringParticiional}/>\n        <Route exact path=\"/regresion-logistica\" component={RegresionLogistica}/>\n        {/* <Route component={NotFound} /> */}\n      </Switch>\n    </Router>\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}